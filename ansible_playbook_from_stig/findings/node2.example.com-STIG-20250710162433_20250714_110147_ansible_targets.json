{
  "metadata": {
    "total_actionable": 435,
    "extraction_date": "1752508969.0047963"
  },
  "targets": [
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_prelink_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Package \"prelink\" Must not be Installed",
      "target_type": "package",
      "target_name": "prelink",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "prelink",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86562-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_aide_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install AIDE",
      "target_type": "package",
      "target_name": "aide",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "aide",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27096-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_dracut-fips_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the dracut-fips Package",
      "target_type": "package",
      "target_name": "dracut-fips",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "dracut-fips",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80358-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_dracut-fips-aesni_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the dracut-fips-aesni Package",
      "target_type": "package",
      "target_name": "dracut-fips-aesni",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "dracut-fips-aesni",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90778-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_nails_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable nails Service",
      "target_type": "service",
      "target_name": "nails",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "nails",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80128-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_mcafeetp_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install McAfee Endpoint Security for Linux (ENSL)",
      "target_type": "package",
      "target_name": "mcafeetp",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "mcafeetp",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86257-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_MFEhiplsm_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the Host Intrusion Prevention System (HIPS) Module",
      "target_type": "package",
      "target_name": "MFEhiplsm",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "MFEhiplsm",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80368-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_systemd_tmp_mount_enabled",
      "severity": "low",
      "status": "unknown",
      "title": "Ensure tmp.mount Unit Us Enabled",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86889-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_gdm_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Remove the GDM Package Group",
      "target_type": "package",
      "target_name": "gdm",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "gdm",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82348-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_dconf_gnome_disable_automount",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable GNOME3 Automounting",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80122-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_dconf_gnome_disable_automount_open",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable GNOME3 Automount Opening",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83692-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_sudo_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install sudo Package",
      "target_type": "package",
      "target_name": "sudo",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "sudo",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82213-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_sudoers",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/sudoers File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/sudoers",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sudoers",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86412-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_sudoers",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/sudoers File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/sudoers",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sudoers",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86415-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_sudoers",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/sudoers File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/sudoers",
      "action_context": "mode=440",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sudoers",
        "mode": "440"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86418-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_sudo",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure That the sudo Binary Has the Correct Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/sudo",
      "action_context": "mode=4111",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/sudo",
        "mode": "4111"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86949-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_binutils_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install binutils Package",
      "target_type": "package",
      "target_name": "binutils",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "binutils",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82990-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_scap-security-guide_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install scap-security-guide Package",
      "target_type": "package",
      "target_name": "scap-security-guide",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "scap-security-guide",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82951-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rear_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install rear Package",
      "target_type": "package",
      "target_name": "rear",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rear",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82882-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_libcap-ng-utils_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install libcap-ng-utils Package",
      "target_type": "package",
      "target_name": "libcap-ng-utils",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "libcap-ng-utils",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82980-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_vim_installed",
      "severity": "low",
      "status": "unknown",
      "title": "Install vim Package",
      "target_type": "package",
      "target_name": "vim",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "vim",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82957-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_tar_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install tar Package",
      "target_type": "package",
      "target_name": "tar",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "tar",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82966-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rng-tools_installed",
      "severity": "low",
      "status": "unknown",
      "title": "Install rng-tools Package",
      "target_type": "package",
      "target_name": "rng-tools",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rng-tools",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82969-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nss-tools_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure nss-tools is installed",
      "target_type": "package",
      "target_name": "nss-tools",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nss-tools",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_gnutls-utils_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure gnutls-utils is installed",
      "target_type": "package",
      "target_name": "gnutls-utils",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "gnutls-utils",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_openscap-scanner_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install openscap-scanner Package",
      "target_type": "package",
      "target_name": "openscap-scanner",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "openscap-scanner",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82219-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_subscription-manager_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install subscription-manager Package",
      "target_type": "package",
      "target_name": "subscription-manager",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "subscription-manager",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82638-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_cryptsetup-luks_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install cryptsetup Package",
      "target_type": "package",
      "target_name": "cryptsetup-luks",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "cryptsetup-luks",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82996-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-plugin-rhtsupport_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-plugin-rhtsupport Package",
      "target_type": "package",
      "target_name": "abrt-plugin-rhtsupport",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-plugin-rhtsupport",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82917-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_krb5-workstation_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall krb5-workstation Package",
      "target_type": "package",
      "target_name": "krb5-workstation",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "krb5-workstation",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82930-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_geolite2-country_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall geolite2-country Package",
      "target_type": "package",
      "target_name": "geolite2-country",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "geolite2-country",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82937-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-addon-kerneloops_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-addon-kerneloops Package",
      "target_type": "package",
      "target_name": "abrt-addon-kerneloops",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-addon-kerneloops",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82927-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_iprutils_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall iprutils Package",
      "target_type": "package",
      "target_name": "iprutils",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "iprutils",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82947-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-plugin-logger_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-plugin-logger Package",
      "target_type": "package",
      "target_name": "abrt-plugin-logger",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-plugin-logger",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82914-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_libreport-plugin-rhtsupport_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall libreport-plugin-rhtsupport Package",
      "target_type": "package",
      "target_name": "libreport-plugin-rhtsupport",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "libreport-plugin-rhtsupport",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_geolite2-city_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall geolite2-city Package",
      "target_type": "package",
      "target_name": "geolite2-city",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "geolite2-city",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82940-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-plugin-sosreport_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-plugin-sosreport Package",
      "target_type": "package",
      "target_name": "abrt-plugin-sosreport",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-plugin-sosreport",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82911-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_libreport-plugin-logger_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall libreport-plugin-logger Package",
      "target_type": "package",
      "target_name": "libreport-plugin-logger",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "libreport-plugin-logger",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-addon-ccpp_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-addon-ccpp Package",
      "target_type": "package",
      "target_name": "abrt-addon-ccpp",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-addon-ccpp",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82920-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-cli_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-cli Package",
      "target_type": "package",
      "target_name": "abrt-cli",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-cli",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82908-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_tuned_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall tuned Package",
      "target_type": "package",
      "target_name": "tuned",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "tuned",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82905-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt-addon-python_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall abrt-addon-python Package",
      "target_type": "package",
      "target_name": "abrt-addon-python",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt-addon-python",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82924-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_gssproxy_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall gssproxy Package",
      "target_type": "package",
      "target_name": "gssproxy",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "gssproxy",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82944-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_pam_pwquality_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install pam_pwquality Package",
      "target_type": "package",
      "target_name": "pam_pwquality",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "pam_pwquality",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86224-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_debug-shell_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable debug-shell SystemD Service",
      "target_type": "service",
      "target_name": "debug-shell",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "debug-shell",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80206-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_screen_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the screen Package",
      "target_type": "package",
      "target_name": "screen",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "screen",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27351-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_pcsc-lite_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the pcsc-lite package",
      "target_type": "package",
      "target_name": "pcsc-lite",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "pcsc-lite",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82347-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_opensc_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the opensc Package For Multifactor Authentication",
      "target_type": "package",
      "target_name": "opensc",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "opensc",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80568-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_pcscd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the pcscd Service",
      "target_type": "service",
      "target_name": "pcscd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "pcscd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80569-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_home_directories",
      "severity": "medium",
      "status": "unknown",
      "title": "All Interactive User Home Directories Must Have mode 0750 Or Less Permissive",
      "target_type": "file_permission",
      "target_name": "/etc/home/directories",
      "action_context": "mode=750",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/home/directories",
        "mode": "750"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80530-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_home_dirs",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure that User Home Directories are not Group-Writable or World-Readable",
      "target_type": "file_permission",
      "target_name": "/etc/home/dirs",
      "action_context": "mode=1000",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/home/dirs",
        "mode": "1000"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80201-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_issue",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Ownership of System Login Banner",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/issue",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83707-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_issue_net",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Ownership of System Login Banner for Remote Connections",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/issue/net",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue/net",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86050-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_motd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Ownership of Message of the Day Banner",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/motd",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/motd",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83727-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_issue",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify ownership of System Login Banner",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/issue",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83717-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_issue_net",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify ownership of System Login Banner for Remote Connections",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/issue/net",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue/net",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86053-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_motd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify ownership of Message of the Day Banner",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/motd",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/motd",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83737-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_issue",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify permissions on System Login Banner",
      "target_type": "file_permission",
      "target_name": "/etc/etc/issue",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83347-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_issue_net",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify permissions on System Login Banner for Remote Connections",
      "target_type": "file_permission",
      "target_name": "/etc/etc/issue/net",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/issue/net",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86058-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_motd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify permissions on Message of the Day Banner",
      "target_type": "file_permission",
      "target_name": "/etc/etc/motd",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/motd",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83337-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/grub.cfg Group Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/grub2/cfg",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/grub2/cfg",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82023-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/user.cfg Group Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/user/cfg",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/user/cfg",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86008-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/grub.cfg User Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/grub2/cfg",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/grub2/cfg",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82026-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/user.cfg User Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/user/cfg",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/user/cfg",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86014-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/grub.cfg Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/grub2/cfg",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/grub2/cfg",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82039-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/grub2/user.cfg Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/user/cfg",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/user/cfg",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86023-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_efi_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify the UEFI Boot Loader grub.cfg Group Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/efi/grub2/cfg",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/grub2/cfg",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83430-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_efi_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/efi/EFI/redhat/user.cfg Group Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/efi/user/cfg",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/user/cfg",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86011-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_efi_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify the UEFI Boot Loader grub.cfg User Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/efi/grub2/cfg",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/grub2/cfg",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83429-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_efi_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/efi/EFI/redhat/user.cfg User Ownership",
      "target_type": "file_ownership",
      "target_name": "/etc/efi/user/cfg",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/user/cfg",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86019-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_efi_grub2_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify the UEFI Boot Loader grub.cfg Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/efi/grub2/cfg",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/grub2/cfg",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83431-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_efi_user_cfg",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify /boot/efi/EFI/redhat/user.cfg Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/efi/user/cfg",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/efi/user/cfg",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86026-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rsyslog-gnutls_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure rsyslog-gnutls is installed",
      "target_type": "package",
      "target_name": "rsyslog-gnutls",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rsyslog-gnutls",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86724-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rsyslog_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure rsyslog is Installed",
      "target_type": "package",
      "target_name": "rsyslog",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rsyslog",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80187-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rsyslog_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable rsyslog Service",
      "target_type": "service",
      "target_name": "rsyslog",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rsyslog",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80188-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_systemd-journal-remote_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install systemd-journal-remote Package",
      "target_type": "package",
      "target_name": "systemd-journal-remote",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "systemd-journal-remote",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87415-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_systemd-journald_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable systemd-journald Service",
      "target_type": "service",
      "target_name": "systemd-journald",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "systemd-journald",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87634-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_logrotate_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure logrotate is Installed",
      "target_type": "package",
      "target_name": "logrotate",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "logrotate",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86153-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_syslogng_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure syslog-ng is Installed",
      "target_type": "package",
      "target_name": "syslogng",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "syslogng",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_syslogng_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable syslog-ng Service",
      "target_type": "service",
      "target_name": "syslogng",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "syslogng",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_firewalld_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install firewalld Package",
      "target_type": "package",
      "target_name": "firewalld",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "firewalld",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82999-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_firewalld_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify firewalld Enabled",
      "target_type": "service",
      "target_name": "firewalld",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "firewalld",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80998-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_libreswan_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install libreswan Package",
      "target_type": "package",
      "target_name": "libreswan",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "libreswan",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80170-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_ipsec_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/ipsec.conf File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/ipsec/conf",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/conf",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86385-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_ipsec_secrets",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/ipsec.secrets File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/ipsec/secrets",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/secrets",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86396-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_ipsec_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/ipsec.conf File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/ipsec/conf",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/conf",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86388-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_ipsec_secrets",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/ipsec.secrets File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/ipsec/secrets",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/secrets",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86399-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_ipsec_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/ipsec.conf File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/ipsec/conf",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/conf",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86392-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_ipsec_secrets",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/ipsec.secrets File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/ipsec/secrets",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/ipsec/secrets",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86403-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_iptables_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install iptables Package",
      "target_type": "package",
      "target_name": "iptables",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "iptables",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82983-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_iptables-services_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Remove iptables-services Package",
      "target_type": "package",
      "target_name": "iptables-services",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "iptables-services",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86678-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ip6tables_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify ip6tables Enabled if Using IPv6",
      "target_type": "service",
      "target_name": "ip6tables",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ip6tables",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_iptables_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify iptables Enabled",
      "target_type": "service",
      "target_name": "iptables",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "iptables",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87026-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_disable_ipv6",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable IPv6 Addressing on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.disable.ipv6",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.disable.ipv6",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80175-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_disable_ipv6",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable IPv6 Addressing on IPv6 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.disable.ipv6",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.disable.ipv6",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-85975-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Accepting Router Advertisements on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.ra",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.ra",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80180-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra_defrtr",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Default Router in Router Advertisements on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.ra.defrtr",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.ra.defrtr",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84271-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra_pinfo",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Prefix Information in Router Advertisements on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.ra.pinfo",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.ra.pinfo",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84279-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra_rtr_pref",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Router Preference in Router Advertisements on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.ra.rtr.pref",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.ra.rtr.pref",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84287-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Accepting ICMP Redirects for All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80182-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.accept.source.route",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.accept.source.route",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80179-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_autoconf",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Auto Configuration on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.autoconf",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.autoconf",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84265-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_forwarding",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for IPv6 Forwarding",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.forwarding",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.forwarding",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80356-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_max_addresses",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Maximum Number of Autoconfigured Addresses on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.max.addresses",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.max.addresses",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84258-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_router_solicitations",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Denying Router Solicitations on All IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.all.router.solicitations",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.all.router.solicitations",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84281-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Accepting Router Advertisements on all IPv6 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.ra",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.ra",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80181-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra_defrtr",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Default Router in Router Advertisements on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.ra.defrtr",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.ra.defrtr",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84267-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra_pinfo",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Prefix Information in Router Advertisements on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.ra.pinfo",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.ra.pinfo",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84273-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra_rtr_pref",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Accepting Router Preference in Router Advertisements on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.ra.rtr.pref",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.ra.rtr.pref",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84289-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80183-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.accept.source.route",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.accept.source.route",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80355-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_autoconf",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Auto Configuration on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.autoconf",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.autoconf",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84263-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_max_addresses",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Maximum Number of Autoconfigured Addresses on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.max.addresses",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.max.addresses",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84256-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_router_solicitations",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure Denying Router Solicitations on All IPv6 Interfaces By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv6.conf.default.router.solicitations",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv6.conf.default.router.solicitations",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84283-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_local",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Accepting Packets Routed Between Local Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.accept.local",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.accept.local",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87789-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Accepting ICMP Redirects for All IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.accept.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.accept.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80158-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_source_route",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.accept.source.route",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.accept.source.route",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27434-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_arp_filter",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure ARP filtering for All IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.arp.filter",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.arp.filter",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87555-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_arp_ignore",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Response Mode of ARP Requests for All IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.arp.ignore",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.arp.ignore",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87889-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_forwarding",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for IPv4 Forwarding on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.forwarding",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.forwarding",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87180-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians",
      "severity": "unknown",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.log.martians",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.log.martians",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80160-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_route_localnet",
      "severity": "medium",
      "status": "unknown",
      "title": "Prevent Routing External Traffic to Local Loopback on All IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.route.localnet",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.route.localnet",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87023-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_rp_filter",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.rp.filter",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.rp.filter",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80167-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.secure.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.secure.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80159-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_shared_media",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Sending and Accepting Shared Media Redirects for All IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.shared.media",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.shared.media",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87333-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.accept.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.accept.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80163-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_source_route",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.accept.source.route",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.accept.source.route",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80162-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians",
      "severity": "unknown",
      "status": "unknown",
      "title": "Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.log.martians",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.log.martians",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80161-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.rp.filter",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.rp.filter",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80168-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Kernel Parameter for Accepting Secure Redirects By Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.secure.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.secure.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80164-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_shared_media",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Sending and Accepting Shared Media Redirects by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.shared.media",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.shared.media",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-87444-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.icmp.echo.ignore.broadcasts",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.icmp.echo.ignore.broadcasts",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80165-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses",
      "severity": "unknown",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.icmp.ignore.bogus.error.responses",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.icmp.ignore.bogus.error.responses",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80166-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_local_port_range",
      "severity": "medium",
      "status": "unknown",
      "title": "Set Kernel Parameter to Increase Local Port Range",
      "target_type": "sysctl",
      "target_name": "net.ipv4.ip.local.port.range",
      "action_context": "value=32768",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.ip.local.port.range",
        "value": "32768",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84276-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_invalid_ratelimit",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure Kernel to Rate Limit Sending of Duplicate TCP Acknowledgments",
      "target_type": "sysctl",
      "target_name": "net.ipv4.tcp.invalid.ratelimit",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.tcp.invalid.ratelimit",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82893-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_rfc1337",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Use TCP RFC 1337 on IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.tcp.rfc1337",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.tcp.rfc1337",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84269-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.tcp.syncookies",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.tcp.syncookies",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27495-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.all.send.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.all.send.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80156-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default",
      "target_type": "sysctl",
      "target_name": "net.ipv4.conf.default.send.redirects",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.conf.default.send.redirects",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80999-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_forward",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces",
      "target_type": "sysctl",
      "target_name": "net.ipv4.ip.forward",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "net.ipv4.ip.forward",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80157-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nftables_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install nftables Package",
      "target_type": "package",
      "target_name": "nftables",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nftables",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86682-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nftables_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall nftables package",
      "target_type": "package",
      "target_name": "nftables",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nftables",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86680-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_nftables_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify nftables Service is Enabled",
      "target_type": "service",
      "target_name": "nftables",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "nftables",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86723-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_nftables_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify nftables Service is Disabled",
      "target_type": "service",
      "target_name": "nftables",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "nftables",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86683-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ufw_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify ufw Enabled",
      "target_type": "service",
      "target_name": "ufw",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ufw",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_bluetooth_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Bluetooth Service",
      "target_type": "service",
      "target_name": "bluetooth",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "bluetooth",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27328-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_crypttab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/crypttab File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/crypttab",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/crypttab",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86361-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_systemmap",
      "severity": "low",
      "status": "unknown",
      "title": "Verify Group Who Owns System.map Files",
      "target_type": "file_ownership",
      "target_name": "/etc/systemmap",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/systemmap",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86582-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_crypttab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/crypttab File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/crypttab",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/crypttab",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86364-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_systemmap",
      "severity": "low",
      "status": "unknown",
      "title": "Verify User Who Owns System.map Files",
      "target_type": "file_ownership",
      "target_name": "/etc/systemmap",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/systemmap",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86585-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_crypttab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/crypttab File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/crypttab",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/crypttab",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86367-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_systemmap",
      "severity": "low",
      "status": "unknown",
      "title": "Verify Permissions on System.map Files",
      "target_type": "file_permission",
      "target_name": "/etc/systemmap",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/systemmap",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82350-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_unauthorized_sgid",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure All SGID Executables Are Authorized",
      "target_type": "file_permission",
      "target_name": "/etc/unauthorized/sgid",
      "action_context": "mode=0644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/unauthorized/sgid",
        "mode": "0644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80132-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_unauthorized_suid",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure All SUID Executables Are Authorized",
      "target_type": "file_permission",
      "target_name": "/etc/unauthorized/suid",
      "action_context": "mode=0644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/unauthorized/suid",
        "mode": "0644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80133-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_unauthorized_world_writable",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure No World-Writable Files Exist",
      "target_type": "file_permission",
      "target_name": "/etc/unauthorized/world/writable",
      "action_context": "mode=002",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/unauthorized/world/writable",
        "mode": "002"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80131-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_ungroupowned",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure All Files Are Owned by a Group",
      "target_type": "file_permission",
      "target_name": "/etc/ungroupowned",
      "action_context": "mode=0644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/ungroupowned",
        "mode": "0644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80135-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_fs_protected_hardlinks",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Enforce DAC on Hardlinks",
      "target_type": "sysctl",
      "target_name": "fs.protected.hardlinks",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "fs.protected.hardlinks",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81026-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_fs_protected_symlinks",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Kernel Parameter to Enforce DAC on Symlinks",
      "target_type": "sysctl",
      "target_name": "fs.protected.symlinks",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "fs.protected.symlinks",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81029-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns Backup group File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/group",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/group",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83474-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns Backup gshadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/gshadow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/gshadow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83534-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns Backup passwd File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/passwd",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/passwd",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83323-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns Backup shadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/shadow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/shadow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83414-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns group File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/group",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/group",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82037-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns gshadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/gshadow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/gshadow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82025-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns passwd File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/passwd",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/passwd",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-26639-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns shadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/shadow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shadow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82051-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_shells",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/shells File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/shells",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shells",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86624-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_backup_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns Backup group File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/group",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/group",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83472-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_backup_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns Backup gshadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/gshadow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/gshadow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83532-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_backup_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns Backup passwd File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/passwd",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/passwd",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83325-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_backup_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns Backup shadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/backup/etc/shadow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/shadow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83412-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns group File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/group",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/group",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82031-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns gshadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/gshadow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/gshadow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82195-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns passwd File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/passwd",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/passwd",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82052-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns shadow File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/shadow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shadow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82022-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_shells",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Who Owns /etc/shells File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/shells",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shells",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86622-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on Backup group File",
      "target_type": "file_permission",
      "target_name": "/etc/backup/etc/group",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/group",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83482-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on Backup gshadow File",
      "target_type": "file_permission",
      "target_name": "/etc/backup/etc/gshadow",
      "action_context": "mode=000",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/gshadow",
        "mode": "000"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83572-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on Backup passwd File",
      "target_type": "file_permission",
      "target_name": "/etc/backup/etc/passwd",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/passwd",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83331-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on Backup shadow File",
      "target_type": "file_permission",
      "target_name": "/etc/backup/etc/shadow",
      "action_context": "mode=000",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/backup/etc/shadow",
        "mode": "000"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83416-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_group",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on group File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/group",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/group",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82032-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_gshadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on gshadow File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/gshadow",
      "action_context": "mode=000",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/gshadow",
        "mode": "000"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82192-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_passwd",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on passwd File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/passwd",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/passwd",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82029-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_shadow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on shadow File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/shadow",
      "action_context": "mode=000",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shadow",
        "mode": "000"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82042-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_shells",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /etc/shells File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/shells",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/shells",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86626-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_var_log",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /var/log Directory",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_var_log_messages",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /var/log/messages File",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log/messages",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/messages",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_var_log_syslog",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /var/log/syslog File",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log/syslog",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/syslog",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_var_log",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /var/log Directory",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_var_log_messages",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /var/log/messages File",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log/messages",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/messages",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_var_log_syslog",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /var/log/syslog File",
      "target_type": "file_ownership",
      "target_name": "/etc/var/log/syslog",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/syslog",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_var_log",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /var/log Directory",
      "target_type": "file_permission",
      "target_name": "/etc/var/log",
      "action_context": "mode=755",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log",
        "mode": "755"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_var_log_messages",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /var/log/messages File",
      "target_type": "file_permission",
      "target_name": "/etc/var/log/messages",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/messages",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_var_log_syslog",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /var/log/syslog File",
      "target_type": "file_permission",
      "target_name": "/etc/var/log/syslog",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/syslog",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_audit_binaries",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify that audit tools Have Mode 0755 or less",
      "target_type": "file_permission",
      "target_name": "/etc/audit/binaries",
      "action_context": "mode=755",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/audit/binaries",
        "mode": "755"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-88909-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_binary_dirs",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify that System Executables Have Restrictive Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/binary/dirs",
      "action_context": "mode=022",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/binary/dirs",
        "mode": "022"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82040-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_library_dirs",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify that Shared Library Files Have Restrictive Permissions",
      "target_type": "file_permission",
      "target_name": "/etc/library/dirs",
      "action_context": "mode=0755",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/library/dirs",
        "mode": "0755"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82033-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_autofs_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable the Automounter",
      "target_type": "service",
      "target_name": "autofs",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "autofs",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27498-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_boot_noauto",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noauto Option to /boot",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83344-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_boot_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /boot",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82135-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_boot_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /boot",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83315-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_boot_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /boot",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82138-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /dev/shm",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80152-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /dev/shm",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80153-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /dev/shm",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80154-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_home_grpquota",
      "severity": "medium",
      "status": "unknown",
      "title": "Add grpquota Option to /home",
      "target_type": "mount",
      "target_name": "/home",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/home",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86037-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_home_nodev",
      "severity": "unknown",
      "status": "unknown",
      "title": "Add nodev Option to /home",
      "target_type": "mount",
      "target_name": "/home",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/home",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81047-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_home_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /home",
      "target_type": "mount",
      "target_name": "/home",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/home",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83327-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_home_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /home",
      "target_type": "mount",
      "target_name": "/home",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/home",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81153-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_home_usrquota",
      "severity": "medium",
      "status": "unknown",
      "title": "Add usrquota Option to /home",
      "target_type": "mount",
      "target_name": "/home",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/home",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86034-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_nodev_nonroot_local_partitions",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to Non-Root Local Partitions",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80145-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_nodev_removable_partitions",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to Removable Media Partitions",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80146-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_noexec_removable_partitions",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to Removable Media Partitions",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80147-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_nosuid_removable_partitions",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to Removable Media Partitions",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80148-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_opt_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /opt",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83317-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_proc_hidepid",
      "severity": "low",
      "status": "unknown",
      "title": "Add hidepid Option to /proc",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-85881-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_srv_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /srv",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83320-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_tmp_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80149-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_tmp_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80150-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_tmp_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80151-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /var/log/audit",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82079-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /var/log/audit",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82146-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /var/log/audit",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82148-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /var/log",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82076-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /var/log",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82142-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_log_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /var/log",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82144-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /var",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82064-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /var",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83329-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /var",
      "target_type": "mount",
      "target_name": "/var",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/var",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83378-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_tmp_bind",
      "severity": "unknown",
      "status": "unknown",
      "title": "Bind Mount /var/tmp To /tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec,nosuid,nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec,nosuid,nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80155-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nodev",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nodev Option to /var/tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81052-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_tmp_noexec",
      "severity": "medium",
      "status": "unknown",
      "title": "Add noexec Option to /var/tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82150-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nosuid",
      "severity": "medium",
      "status": "unknown",
      "title": "Add nosuid Option to /var/tmp",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82153-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_dmesg_restrict",
      "severity": "low",
      "status": "unknown",
      "title": "Restrict Access to Kernel Message Buffer",
      "target_type": "sysctl",
      "target_name": "kernel.dmesg.restrict",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.dmesg.restrict",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27050-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_kexec_load_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Kernel Image Loading",
      "target_type": "sysctl",
      "target_name": "kernel.kexec.load.disabled",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.kexec.load.disabled",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81056-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_modules_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable loading and unloading of kernel modules",
      "target_type": "sysctl",
      "target_name": "kernel.modules.disabled",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.modules.disabled",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83392-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_panic_on_oops",
      "severity": "medium",
      "status": "unknown",
      "title": "Kernel panic on oops",
      "target_type": "sysctl",
      "target_name": "kernel.panic.on.oops",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.panic.on.oops",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90766-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_perf_cpu_time_max_percent",
      "severity": "medium",
      "status": "unknown",
      "title": "Limit CPU consumption of the Perf system",
      "target_type": "sysctl",
      "target_name": "kernel.perf.cpu.time.max.percent",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.perf.cpu.time.max.percent",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83369-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_perf_event_max_sample_rate",
      "severity": "medium",
      "status": "unknown",
      "title": "Limit sampling frequency of the Perf system",
      "target_type": "sysctl",
      "target_name": "kernel.perf.event.max.sample.rate",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.perf.event.max.sample.rate",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83367-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_perf_event_paranoid",
      "severity": "low",
      "status": "unknown",
      "title": "Disallow kernel profiling by unprivileged users",
      "target_type": "sysctl",
      "target_name": "kernel.perf.event.paranoid",
      "action_context": "value=2",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.perf.event.paranoid",
        "value": "2",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81053-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_pid_max",
      "severity": "medium",
      "status": "unknown",
      "title": "Configure maximum number of process identifiers",
      "target_type": "sysctl",
      "target_name": "kernel.pid.max",
      "action_context": "value=65536",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.pid.max",
        "value": "65536",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83365-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_sysrq",
      "severity": "medium",
      "status": "unknown",
      "title": "Disallow magic SysRq key",
      "target_type": "sysctl",
      "target_name": "kernel.sysrq",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.sysrq",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83353-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_yama_ptrace_scope",
      "severity": "medium",
      "status": "unknown",
      "title": "Restrict usage of ptrace to descendant processes",
      "target_type": "sysctl",
      "target_name": "kernel.yama.ptrace.scope",
      "action_context": "value=1",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.yama.ptrace.scope",
        "value": "1",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81058-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_vm_mmap_min_addr",
      "severity": "medium",
      "status": "unknown",
      "title": "Prevent applications from mapping low portion of virtual memory",
      "target_type": "sysctl",
      "target_name": "vm.mmap.min.addr",
      "action_context": "value=65536",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "vm.mmap.min.addr",
        "value": "65536",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83358-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_fs_suid_dumpable",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Core Dumps for SUID programs",
      "target_type": "sysctl",
      "target_name": "fs.suid.dumpable",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "fs.suid.dumpable",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-26900-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_exec_shield",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable ExecShield via sysctl",
      "target_type": "sysctl",
      "target_name": "kernel.exec.shield",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.exec.shield",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27211-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_kptr_restrict",
      "severity": "medium",
      "status": "unknown",
      "title": "Restrict Exposed Kernel Pointer Addresses Access",
      "target_type": "sysctl",
      "target_name": "kernel.kptr.restrict",
      "action_context": "value=0",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.kptr.restrict",
        "value": "0",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80659-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_randomize_va_space",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable Randomized Layout of Virtual Address Space",
      "target_type": "sysctl",
      "target_name": "kernel.randomize.va.space",
      "action_context": "value=2",
      "ansible_module": "sysctl",
      "ansible_params": {
        "name": "kernel.randomize.va.space",
        "value": "2",
        "state": "present",
        "reload": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27127-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_libselinux_installed",
      "severity": "high",
      "status": "unknown",
      "title": "Install libselinux Package",
      "target_type": "package",
      "target_name": "libselinux",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "libselinux",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82876-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_policycoreutils_installed",
      "severity": "low",
      "status": "unknown",
      "title": "Install policycoreutils Package",
      "target_type": "package",
      "target_name": "policycoreutils",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "policycoreutils",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82977-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_setroubleshoot-plugins_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall setroubleshoot-plugins Package",
      "target_type": "package",
      "target_name": "setroubleshoot-plugins",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "setroubleshoot-plugins",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84249-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_setroubleshoot-server_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall setroubleshoot-server Package",
      "target_type": "package",
      "target_name": "setroubleshoot-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "setroubleshoot-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83488-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_mcstrans_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall mcstrans Package",
      "target_type": "package",
      "target_name": "mcstrans",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "mcstrans",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80445-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_setroubleshoot_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall setroubleshoot Package",
      "target_type": "package",
      "target_name": "setroubleshoot",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "setroubleshoot",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80444-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_sestatus_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/sestatus.conf File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/sestatus/conf",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sestatus/conf",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86287-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_sestatus_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/sestatus.conf File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/sestatus/conf",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sestatus/conf",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86284-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_sestatus_conf",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/sestatus.conf File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/sestatus/conf",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/sestatus/conf",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86290-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sebool_mount_anyfile",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the mount_anyfile SELinux Boolean",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82304-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_sebool_xguest_mount_media",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable the xguest_mount_media SELinux Boolean",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82339-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_avahi_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall avahi Server Package",
      "target_type": "package",
      "target_name": "avahi",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "avahi",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86511-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_avahi-autoipd_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall avahi-autoipd Server Package",
      "target_type": "package",
      "target_name": "avahi-autoipd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "avahi-autoipd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86514-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_avahi-daemon_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Avahi Server Software",
      "target_type": "service",
      "target_name": "avahi-daemon",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "avahi-daemon",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80338-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_psacct_installed",
      "severity": "low",
      "status": "unknown",
      "title": "Install the psacct package",
      "target_type": "package",
      "target_name": "psacct",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "psacct",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82403-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_abrt_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall Automatic Bug Reporting Tool (abrt)",
      "target_type": "package",
      "target_name": "abrt",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "abrt",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81040-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_psacct_enabled",
      "severity": "low",
      "status": "unknown",
      "title": "Enable Process Accounting (psacct)",
      "target_type": "service",
      "target_name": "psacct",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "psacct",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80265-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_irqbalance_enabled",
      "severity": "low",
      "status": "unknown",
      "title": "Enable IRQ Balance (irqbalance)",
      "target_type": "service",
      "target_name": "irqbalance",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "irqbalance",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80257-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cgred_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Control Group Rules Engine (cgred)",
      "target_type": "service",
      "target_name": "cgred",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cgred",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80255-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_messagebus_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable D-Bus IPC Service (messagebus)",
      "target_type": "service",
      "target_name": "messagebus",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "messagebus",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80260-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_acpid_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Advanced Configuration and Power Interface (acpid)",
      "target_type": "service",
      "target_name": "acpid",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "acpid",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80252-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_kdump_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable KDump Kernel Crash Analyzer (kdump)",
      "target_type": "service",
      "target_name": "kdump",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "kdump",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80258-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_netconsole_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Network Console (netconsole)",
      "target_type": "service",
      "target_name": "netconsole",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "netconsole",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80261-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_certmonger_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Certmonger Service (certmonger)",
      "target_type": "service",
      "target_name": "certmonger",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "certmonger",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80253-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_quota_nld_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Quota Netlink (quota_nld)",
      "target_type": "service",
      "target_name": "quota_nld",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "quota_nld",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80267-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rhnsd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Red Hat Network Service (rhnsd)",
      "target_type": "service",
      "target_name": "rhnsd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rhnsd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80269-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_mdmonitor_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Software RAID Monitor (mdmonitor)",
      "target_type": "service",
      "target_name": "mdmonitor",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "mdmonitor",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80259-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_oddjobd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Odd Job Daemon (oddjobd)",
      "target_type": "service",
      "target_name": "oddjobd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "oddjobd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80263-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_smartd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable SMART Disk Monitoring Service (smartd)",
      "target_type": "service",
      "target_name": "smartd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "smartd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80272-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_qpidd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Apache Qpid (qpidd)",
      "target_type": "service",
      "target_name": "qpidd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "qpidd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80266-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_abrtd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Automatic Bug Reporting Tool (abrtd)",
      "target_type": "service",
      "target_name": "abrtd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "abrtd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82027-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cockpit_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Cockpit Management Server",
      "target_type": "service",
      "target_name": "cockpit",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cockpit",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cpupower_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable CPU Speed (cpupower)",
      "target_type": "service",
      "target_name": "cpupower",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cpupower",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80256-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_saslauthd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Cyrus SASL Authentication Daemon (saslauthd)",
      "target_type": "service",
      "target_name": "saslauthd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "saslauthd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80271-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cgconfig_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Control Group Config (cgconfig)",
      "target_type": "service",
      "target_name": "cgconfig",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cgconfig",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80254-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ntpdate_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable ntpdate Service (ntpdate)",
      "target_type": "service",
      "target_name": "ntpdate",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ntpdate",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80262-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rdisc_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Network Router Discovery Daemon (rdisc)",
      "target_type": "service",
      "target_name": "rdisc",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rdisc",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80268-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rhsmcertd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Red Hat Subscription Manager Daemon (rhsmcertd)",
      "target_type": "service",
      "target_name": "rhsmcertd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rhsmcertd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80270-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_portreserve_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Portreserve (portreserve)",
      "target_type": "service",
      "target_name": "portreserve",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "portreserve",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80264-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_sysstat_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable System Statistics Reset Service (sysstat)",
      "target_type": "service",
      "target_name": "sysstat",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "sysstat",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80273-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_cron_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the cron service",
      "target_type": "package",
      "target_name": "cron",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "cron",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_crond_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable cron Service",
      "target_type": "service",
      "target_name": "crond",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "crond",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27323-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cron_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable cron Service",
      "target_type": "service",
      "target_name": "cron",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cron",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable At Service (atd)",
      "target_type": "service",
      "target_name": "atd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "atd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80345-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_d",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns cron.d",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.d/*",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.d/*",
        "group": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82265-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_daily",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns cron.daily",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.daily/*",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.daily/*",
        "group": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82232-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_hourly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns cron.hourly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.hourly/*",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.hourly/*",
        "group": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82226-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_monthly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns cron.monthly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.monthly/*",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.monthly/*",
        "group": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82255-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_weekly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns cron.weekly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.weekly/*",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.weekly/*",
        "group": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82242-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_crontab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns Crontab",
      "target_type": "file_ownership",
      "target_name": "/etc/crontab",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/crontab",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82222-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_d",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on cron.d",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.d/*",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.d/*",
        "owner": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82270-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_daily",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on cron.daily",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.daily/*",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.daily/*",
        "owner": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82236-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_hourly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on cron.hourly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.hourly/*",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.hourly/*",
        "owner": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82208-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_monthly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on cron.monthly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.monthly/*",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.monthly/*",
        "owner": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82259-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_weekly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on cron.weekly",
      "target_type": "file_ownership",
      "target_name": "/etc/cron.weekly/*",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.weekly/*",
        "owner": "root",
        "recurse": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82246-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_crontab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on crontab",
      "target_type": "file_ownership",
      "target_name": "/etc/crontab",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/crontab",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82217-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_d",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on cron.d",
      "target_type": "file_permission",
      "target_name": "/etc/cron.d/*",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.d/*",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82276-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_daily",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on cron.daily",
      "target_type": "file_permission",
      "target_name": "/etc/cron.daily/*",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.daily/*",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82239-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_hourly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on cron.hourly",
      "target_type": "file_permission",
      "target_name": "/etc/cron.hourly/*",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.hourly/*",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82229-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_monthly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on cron.monthly",
      "target_type": "file_permission",
      "target_name": "/etc/cron.monthly/*",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.monthly/*",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82262-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_weekly",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on cron.weekly",
      "target_type": "file_permission",
      "target_name": "/etc/cron.weekly/*",
      "action_context": "mode=700",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron.weekly/*",
        "mode": "700"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82250-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_crontab",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on crontab",
      "target_type": "file_permission",
      "target_name": "/etc/crontab",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/crontab",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82205-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_cron_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/cron.allow file",
      "target_type": "file_ownership",
      "target_name": "/etc/cron/allow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron/allow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80379-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_cron_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/cron.allow file",
      "target_type": "file_ownership",
      "target_name": "/etc/cron/allow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron/allow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80378-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_cron_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /etc/cron.allow file",
      "target_type": "file_permission",
      "target_name": "/etc/cron/allow",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/cron/allow",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86875-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nis_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall the nis package",
      "target_type": "package",
      "target_name": "nis",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nis",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_inetutils-telnetd_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall the inet-based telnet server",
      "target_type": "package",
      "target_name": "inetutils-telnetd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "inetutils-telnetd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_ntpdate_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall the ntpdate package",
      "target_type": "package",
      "target_name": "ntpdate",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "ntpdate",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_telnetd-ssl_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall the ssl compliant telnet server",
      "target_type": "package",
      "target_name": "telnetd-ssl",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "telnetd-ssl",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_telnetd_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall the telnet server",
      "target_type": "package",
      "target_name": "telnetd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "telnetd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82461-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_dhcp_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall DHCP Server Package",
      "target_type": "package",
      "target_name": "dhcp",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "dhcp",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80331-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_dhcpd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable DHCP Service",
      "target_type": "service",
      "target_name": "dhcpd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "dhcpd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80330-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_dnsmasq_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall dnsmasq Package",
      "target_type": "package",
      "target_name": "dnsmasq",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "dnsmasq",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90761-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_bind_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall bind Package",
      "target_type": "package",
      "target_name": "bind",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "bind",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80326-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_named_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable named Service",
      "target_type": "service",
      "target_name": "named",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "named",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80325-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_docker_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the docker Package",
      "target_type": "package",
      "target_name": "docker",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "docker",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the Docker service",
      "target_type": "service",
      "target_name": "docker",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "docker",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80440-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_ftp_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Remove ftp Package",
      "target_type": "package",
      "target_name": "ftp",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "ftp",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90757-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_vsftpd_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall vsftpd Package",
      "target_type": "package",
      "target_name": "vsftpd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "vsftpd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80245-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_vsftpd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable vsftpd Service",
      "target_type": "service",
      "target_name": "vsftpd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "vsftpd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80244-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_vsftpd_installed",
      "severity": "low",
      "status": "unknown",
      "title": "Install vsftpd Package",
      "target_type": "package",
      "target_name": "vsftpd",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "vsftpd",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80246-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_httpd_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall httpd Package",
      "target_type": "package",
      "target_name": "httpd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "httpd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80301-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_httpd_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable httpd Service",
      "target_type": "service",
      "target_name": "httpd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "httpd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80300-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nginx_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall nginx Package",
      "target_type": "package",
      "target_name": "nginx",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nginx",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90758-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_httpd_server_conf_d_files",
      "severity": "unknown",
      "status": "unknown",
      "title": "Set Permissions on All Configuration Files Inside /etc/httpd/conf.d/",
      "target_type": "file_permission",
      "target_name": "/etc/httpd/server/conf/d/files",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/httpd/server/conf/d/files",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80381-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_httpd_server_conf_files",
      "severity": "unknown",
      "status": "unknown",
      "title": "Set Permissions on All Configuration Files Inside /etc/httpd/conf/",
      "target_type": "file_permission",
      "target_name": "/etc/httpd/server/conf/files",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/httpd/server/conf/files",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80324-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_httpd_server_modules_files",
      "severity": "unknown",
      "status": "unknown",
      "title": "Set Permissions on All Configuration Files Inside /etc/httpd/conf.modules.d/",
      "target_type": "file_permission",
      "target_name": "/etc/httpd/server/modules/files",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/httpd/server/modules/files",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80382-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_cyrus-imapd_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall cyrus-imapd Package",
      "target_type": "package",
      "target_name": "cyrus-imapd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "cyrus-imapd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90760-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_dovecot_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall dovecot Package",
      "target_type": "package",
      "target_name": "dovecot",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "dovecot",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80295-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_dovecot_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Dovecot Service",
      "target_type": "service",
      "target_name": "dovecot",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "dovecot",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80294-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_krb5-server_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Remove the Kerberos Server Package",
      "target_type": "package",
      "target_name": "krb5-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "krb5-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_389-ds-base_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall 389-ds-base Package",
      "target_type": "package",
      "target_name": "389-ds-base",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "389-ds-base",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82727-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_openldap-clients_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Ensure LDAP client is not installed",
      "target_type": "package",
      "target_name": "openldap-clients",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "openldap-clients",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82884-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_openldap-servers_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall openldap-servers Package",
      "target_type": "package",
      "target_name": "openldap-servers",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "openldap-servers",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80293-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_mailx_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "The mailx Package Is Installed",
      "target_type": "package",
      "target_name": "mailx",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "mailx",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86611-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_postfix_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "The Postfix package is installed",
      "target_type": "package",
      "target_name": "postfix",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "postfix",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_sendmail_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall Sendmail Package",
      "target_type": "package",
      "target_name": "sendmail",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "sendmail",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80288-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_postfix_enabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Enable Postfix Service",
      "target_type": "service",
      "target_name": "postfix",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "postfix",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80287-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_nfs-utils_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall nfs-utils Package",
      "target_type": "package",
      "target_name": "nfs-utils",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "nfs-utils",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82933-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_netfs_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Network File Systems (netfs)",
      "target_type": "service",
      "target_name": "netfs",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "netfs",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rpcbind_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall rpcbind Package",
      "target_type": "package",
      "target_name": "rpcbind",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rpcbind",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86644-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_nfslock_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Network File System Lock Service (nfslock)",
      "target_type": "service",
      "target_name": "nfslock",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "nfslock",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80228-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rpcidmapd_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable RPC ID Mapping Service (rpcidmapd)",
      "target_type": "service",
      "target_name": "rpcidmapd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rpcidmapd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80231-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rpcgssd_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Secure RPC Client Service (rpcgssd)",
      "target_type": "service",
      "target_name": "rpcgssd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rpcgssd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80229-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rpcbind_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable rpcbind Service",
      "target_type": "service",
      "target_name": "rpcbind",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rpcbind",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80230-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_nfs_fixed_mountd_port",
      "severity": "unknown",
      "status": "unknown",
      "title": "Configure mountd to use static port",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80235-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_nfs_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Network File System (nfs)",
      "target_type": "service",
      "target_name": "nfs",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "nfs",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80237-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rpcsvcgssd_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Secure RPC Server Service (rpcsvcgssd)",
      "target_type": "service",
      "target_name": "rpcsvcgssd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rpcsvcgssd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80238-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_krb_sec_remote_filesystems",
      "severity": "medium",
      "status": "unknown",
      "title": "Mount Remote Filesystems with Kerberos Security",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27458-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_nodev_remote_filesystems",
      "severity": "medium",
      "status": "unknown",
      "title": "Mount Remote Filesystems with nodev",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nodev",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nodev",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80239-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_noexec_remote_filesystems",
      "severity": "medium",
      "status": "unknown",
      "title": "Mount Remote Filesystems with noexec",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=noexec",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "noexec",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80436-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_nosuid_remote_filesystems",
      "severity": "medium",
      "status": "unknown",
      "title": "Mount Remote Filesystems with nosuid",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=nosuid",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "nosuid",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80240-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_ntp_installed",
      "severity": "high",
      "status": "unknown",
      "title": "Install the ntp service",
      "target_type": "package",
      "target_name": "ntp",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "ntp",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_chrony_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "The Chrony package is installed",
      "target_type": "package",
      "target_name": "chrony",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "chrony",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83419-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_chronyd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "The Chronyd service is enabled",
      "target_type": "service",
      "target_name": "chronyd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "chronyd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83420-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ntpd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the NTP Daemon",
      "target_type": "service",
      "target_name": "ntpd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ntpd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84253-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_chronyd_or_ntpd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the NTP Daemon",
      "target_type": "service",
      "target_name": "chronyd_or_ntpd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "chronyd_or_ntpd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27444-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ntp_enabled",
      "severity": "high",
      "status": "unknown",
      "title": "Enable the NTP Daemon",
      "target_type": "service",
      "target_name": "ntp",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ntp",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_chrony_keys",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns /etc/chrony.keys File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/chrony/keys",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/chrony/keys",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86371-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_chrony_keys",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify User Who Owns /etc/chrony.keys File",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/chrony/keys",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/chrony/keys",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86375-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_chrony_keys",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions On /etc/chrony.keys File",
      "target_type": "file_permission",
      "target_name": "/etc/etc/chrony/keys",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/chrony/keys",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86381-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rsync_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall rsync Package",
      "target_type": "package",
      "target_name": "rsync",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rsync",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86334-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rsyncd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure rsyncd service is disabled",
      "target_type": "service",
      "target_name": "rsyncd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rsyncd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83334-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_tcp_wrappers_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install tcp_wrappers Package",
      "target_type": "package",
      "target_name": "tcp_wrappers",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "tcp_wrappers",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27361-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_xinetd_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall xinetd Package",
      "target_type": "package",
      "target_name": "xinetd",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "xinetd",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27354-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_xinetd_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable xinetd Service",
      "target_type": "service",
      "target_name": "xinetd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "xinetd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27443-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_hosts_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Ownership of /etc/hosts.allow",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/hosts/allow",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/allow",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83824-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_etc_hosts_deny",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Ownership of /etc/hosts.deny",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/hosts/deny",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/deny",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84031-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_hosts_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Ownership of /etc/hosts.allow",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/hosts/allow",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/allow",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83826-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_etc_hosts_deny",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Ownership of /etc/hosts.deny",
      "target_type": "file_ownership",
      "target_name": "/etc/etc/hosts/deny",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/deny",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84033-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_hosts_allow",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /etc/hosts.allow",
      "target_type": "file_permission",
      "target_name": "/etc/etc/hosts/allow",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/allow",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-83828-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_etc_hosts_deny",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on /etc/hosts.deny",
      "target_type": "file_permission",
      "target_name": "/etc/etc/hosts/deny",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/etc/hosts/deny",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-84035-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_ypbind_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Remove NIS Client",
      "target_type": "package",
      "target_name": "ypbind",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "ypbind",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27396-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_ypserv_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall ypserv Package",
      "target_type": "package",
      "target_name": "ypserv",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "ypserv",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27399-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ypserv_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable ypserv Service",
      "target_type": "service",
      "target_name": "ypserv",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ypserv",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90759-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_ypbind_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable ypbind Service",
      "target_type": "service",
      "target_name": "ypbind",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "ypbind",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27385-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rsh_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall rsh Package",
      "target_type": "package",
      "target_name": "rsh",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rsh",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27274-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_rsh-server_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall rsh-server Package",
      "target_type": "package",
      "target_name": "rsh-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "rsh-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27342-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rlogin_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable rlogin Service",
      "target_type": "service",
      "target_name": "rlogin",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rlogin",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27336-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rsh_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable rsh Service",
      "target_type": "service",
      "target_name": "rsh",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rsh",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27337-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_rexec_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable rexec Service",
      "target_type": "service",
      "target_name": "rexec",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "rexec",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27408-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_talk_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall talk Package",
      "target_type": "package",
      "target_name": "talk",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "talk",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27432-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_talk-server_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Uninstall talk-server Package",
      "target_type": "package",
      "target_name": "talk-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "talk-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27210-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_telnet_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Remove telnet Clients",
      "target_type": "package",
      "target_name": "telnet",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "telnet",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27305-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_telnet-server_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall telnet-server Package",
      "target_type": "package",
      "target_name": "telnet-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "telnet-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27165-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_telnet_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable telnet Service",
      "target_type": "service",
      "target_name": "telnet",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "telnet",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27401-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_tftp_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Remove tftp Daemon",
      "target_type": "package",
      "target_name": "tftp",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "tftp",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80443-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_tftp-server_removed",
      "severity": "high",
      "status": "unknown",
      "title": "Uninstall tftp-server Package",
      "target_type": "package",
      "target_name": "tftp-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "tftp-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80213-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_tftp_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable tftp Service",
      "target_type": "service",
      "target_name": "tftp",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "tftp",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80212-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_cups_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall CUPS Package",
      "target_type": "package",
      "target_name": "cups",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "cups",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86295-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_cups_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable the CUPS Service",
      "target_type": "service",
      "target_name": "cups",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "cups",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80282-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_squid_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall squid Package",
      "target_type": "package",
      "target_name": "squid",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "squid",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80286-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_squid_disabled",
      "severity": "unknown",
      "status": "unknown",
      "title": "Disable Squid",
      "target_type": "service",
      "target_name": "squid",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "squid",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80285-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_freeradius_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Remove the FreeRadius Server Package",
      "target_type": "package",
      "target_name": "freeradius",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "freeradius",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82751-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_quagga_removed",
      "severity": "low",
      "status": "unknown",
      "title": "Uninstall quagga Package",
      "target_type": "package",
      "target_name": "quagga",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "quagga",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27594-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_zebra_disabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Disable Quagga Service",
      "target_type": "service",
      "target_name": "zebra",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "zebra",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27191-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_samba-common_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the Samba Common Package",
      "target_type": "package",
      "target_name": "samba-common",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "samba-common",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80360-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_mount_option_smb_client_signing",
      "severity": "unknown",
      "status": "unknown",
      "title": "Require Client SMB Packet Signing, if using mount.cifs",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80281-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_samba_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall Samba Package",
      "target_type": "package",
      "target_name": "samba",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "samba",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80278-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_smb_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable Samba",
      "target_type": "service",
      "target_name": "smb",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "smb",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80277-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_net-snmp_removed",
      "severity": "unknown",
      "status": "unknown",
      "title": "Uninstall net-snmp Package",
      "target_type": "package",
      "target_name": "net-snmp",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "net-snmp",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80275-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_snmpd_disabled",
      "severity": "low",
      "status": "unknown",
      "title": "Disable snmpd Service",
      "target_type": "service",
      "target_name": "snmpd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "snmpd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80274-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_openssh-server_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the OpenSSH Server Package",
      "target_type": "package",
      "target_name": "openssh-server",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "openssh-server",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80215-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_openssh-server_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Remove the OpenSSH Server Package",
      "target_type": "package",
      "target_name": "openssh-server",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "openssh-server",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_sshd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the OpenSSH Service",
      "target_type": "service",
      "target_name": "sshd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "sshd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80216-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_sshd_disabled",
      "severity": "high",
      "status": "unknown",
      "title": "Disable SSH Server If Possible",
      "target_type": "service",
      "target_name": "sshd",
      "action_context": "state=stopped",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "sshd",
        "state": "stopped",
        "enabled": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80217-3"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_groupowner_sshd_config",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Group Who Owns SSH Server config file",
      "target_type": "file_ownership",
      "target_name": "/etc/ssh/sshd_config",
      "action_context": "group=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/ssh/sshd_config",
        "group": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82902-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_owner_sshd_config",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Owner on SSH Server config file",
      "target_type": "file_ownership",
      "target_name": "/etc/ssh/sshd_config",
      "action_context": "owner=root",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/ssh/sshd_config",
        "owner": "root",
        "recurse": false
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82899-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_sshd_config",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on SSH Server config file",
      "target_type": "file_permission",
      "target_name": "/etc/ssh/sshd_config",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/ssh/sshd_config",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82895-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_sshd_private_key",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on SSH Server Private *_key Key Files",
      "target_type": "file_permission",
      "target_name": "/etc/sshd/private/key",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/sshd/private/key",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27485-2"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_sshd_pub_key",
      "severity": "medium",
      "status": "unknown",
      "title": "Verify Permissions on SSH Server Public *.pub Key Files",
      "target_type": "file_permission",
      "target_name": "/etc/sshd/pub/key",
      "action_context": "mode=644",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/sshd/pub/key",
        "mode": "644"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27311-0"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_sssd-ipa_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install sssd-ipa Package",
      "target_type": "package",
      "target_name": "sssd-ipa",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "sssd-ipa",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82993-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_sssd_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install the SSSD Package",
      "target_type": "package",
      "target_name": "sssd",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "sssd",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80362-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_sssd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable the SSSD Service",
      "target_type": "service",
      "target_name": "sssd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "sssd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80363-5"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_usbguard_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install usbguard Package",
      "target_type": "package",
      "target_name": "usbguard",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "usbguard",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82960-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_xorg-x11-server-common_removed",
      "severity": "medium",
      "status": "unknown",
      "title": "Remove the X Windows Package Group",
      "target_type": "package",
      "target_name": "xorg-x11-server-common",
      "action_context": "state=absent",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "xorg-x11-server-common",
        "state": "absent"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27218-7"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_audit-libs_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure the audit-libs package as a part of audit Subsystem is Installed",
      "target_type": "package",
      "target_name": "audit-libs",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "audit-libs",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-86531-1"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_audispd-plugins_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Install audispd-plugins Package",
      "target_type": "package",
      "target_name": "audispd-plugins",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "audispd-plugins",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-82954-9"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_audit-audispd-plugins_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure the default plugins for the audit dispatcher are Installed",
      "target_type": "package",
      "target_name": "audit-audispd-plugins",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "audit-audispd-plugins",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_package_audit_installed",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure the audit Subsystem is Installed",
      "target_type": "package",
      "target_name": "audit",
      "action_context": "state=present",
      "ansible_module": "yum",
      "ansible_params": {
        "name": "audit",
        "state": "present"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81042-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_service_auditd_enabled",
      "severity": "medium",
      "status": "unknown",
      "title": "Enable auditd Service",
      "target_type": "service",
      "target_name": "auditd",
      "action_context": "state=started",
      "ansible_module": "systemd",
      "ansible_params": {
        "name": "auditd",
        "state": "started",
        "enabled": true
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27407-6"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_audit_configuration",
      "severity": "medium",
      "status": "unknown",
      "title": "Audit Configuration Files Permissions are 640 or More Restrictive",
      "target_type": "file_permission",
      "target_name": "/etc/audit/configuration",
      "action_context": "mode=640",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/audit/configuration",
        "mode": "640"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-88763-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_file_permissions_var_log_audit",
      "severity": "medium",
      "status": "unknown",
      "title": "System Audit Logs Must Have Mode 0640 or Less Permissive",
      "target_type": "file_permission",
      "target_name": "/etc/var/log/audit",
      "action_context": "mode=600",
      "ansible_module": "file",
      "ansible_params": {
        "path": "/etc/var/log/audit",
        "mode": "600"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-27205-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_umount",
      "severity": "medium",
      "status": "unknown",
      "title": "Record Events that Modify the System's Discretionary Access Controls - umount",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_umount2",
      "severity": "medium",
      "status": "unknown",
      "title": "Record Events that Modify the System's Discretionary Access Controls - umount2",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-90777-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_mount",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure auditd Collects Information on the Use of Privileged Commands - mount",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-81064-8"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    },
    {
      "rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_umount",
      "severity": "medium",
      "status": "unknown",
      "title": "Ensure auditd Collects Information on the Use of Privileged Commands - umount",
      "target_type": "mount",
      "target_name": "/tmp",
      "action_context": "opts=defaults",
      "ansible_module": "mount",
      "ansible_params": {
        "path": "/tmp",
        "opts": "defaults",
        "state": "mounted"
      },
      "compliance": {
        "cci_refs": [],
        "nist_refs": [
          "CCE-80405-4"
        ],
        "cis_refs": [],
        "disa_refs": [],
        "pcidss_refs": []
      }
    }
  ]
}