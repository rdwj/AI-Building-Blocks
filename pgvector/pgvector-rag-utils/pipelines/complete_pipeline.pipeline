{
  "doc_type": "pipeline",
  "version": "3.0",
  "json_schema": "http://api.dataplatform.ibm.com/schemas/common-pipeline/pipeline-flow/pipeline-flow-v3-schema.json",
  "id": "pgvector-complete-pipeline",
  "primary_pipeline": "primary",
  "pipelines": [
    {
      "id": "primary",
      "nodes": [
        {
          "id": "setup-node",
          "type": "execution_node",
          "op": "execute-python-node",
          "app_data": {
            "component_parameters": {
              "filename": "pipeline_scripts/01_setup_database.py",
              "runtime_image": "quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.9-2023b",
              "cpu": 1,
              "gpu": 0,
              "memory": 2,
              "env_vars": [
                "DB_HOST",
                "DB_PORT",
                "DB_NAME",
                "DB_USER",
                "DB_PASSWORD"
              ],
              "include_subdirectories": true,
              "outputs": [],
              "dependencies": [
                "psycopg2-binary",
                "pgvector"
              ]
            },
            "label": "Setup Database",
            "ui_data": {
              "label": "Setup Database",
              "image": "/static/elyra/python.svg",
              "x_pos": 50,
              "y_pos": 150,
              "description": "Initialize database schema"
            }
          },
          "inputs": [
            {
              "id": "inPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Input Port"
                }
              }
            }
          ],
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Output Port"
                }
              }
            }
          ]
        },
        {
          "id": "ingest-node",
          "type": "execution_node",
          "op": "execute-python-node",
          "app_data": {
            "component_parameters": {
              "filename": "pipeline_scripts/02_ingest_documents.py",
              "runtime_image": "quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.9-2023b",
              "cpu": 2,
              "gpu": 0,
              "memory": 4,
              "env_vars": [
                "DB_HOST",
                "DB_PORT",
                "DB_NAME",
                "DB_USER",
                "DB_PASSWORD",
                "NOMIC_EMBED_URL",
                "NOMIC_EMBED_API_KEY",
                "NOMIC_EMBED_MODEL_NAME",
                "DOCLING_URL",
                "DOCLING_API_KEY",
                "PROJECT_ID=demo_project",
                "PROJECT_NAME=Demo Project",
                "DOCUMENTS_DIR=/mnt/data/documents"
              ],
              "include_subdirectories": true,
              "outputs": [],
              "dependencies": [
                "psycopg2-binary",
                "pgvector",
                "numpy",
                "requests"
              ]
            },
            "label": "Ingest Documents",
            "ui_data": {
              "label": "Ingest Documents",
              "image": "/static/elyra/python.svg",
              "x_pos": 250,
              "y_pos": 150,
              "description": "Process and load documents"
            }
          },
          "inputs": [
            {
              "id": "inPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Input Port"
                }
              },
              "links": [
                {
                  "id": "link1",
                  "node_id_ref": "setup-node",
                  "port_id_ref": "outPort"
                }
              ]
            }
          ],
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Output Port"
                }
              }
            }
          ]
        },
        {
          "id": "test-node",
          "type": "execution_node",
          "op": "execute-python-node",
          "app_data": {
            "component_parameters": {
              "filename": "pipeline_scripts/03_test_operations.py",
              "runtime_image": "quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.9-2023b",
              "cpu": 2,
              "gpu": 0,
              "memory": 4,
              "env_vars": [
                "DB_HOST",
                "DB_PORT",
                "DB_NAME",
                "DB_USER",
                "DB_PASSWORD",
                "NOMIC_EMBED_URL",
                "NOMIC_EMBED_API_KEY",
                "NOMIC_EMBED_MODEL_NAME",
                "LLAMA_3-2_URL",
                "LLAMA_3-2_API_KEY",
                "LLAMA_3-2_MODEL_NAME",
                "PROJECT_ID=demo_project",
                "TEST_QUERIES=[\"What is PGVector?\", \"How does hybrid search work?\"]",
                "RESULTS_FILE=/mnt/outputs/test_results.json"
              ],
              "include_subdirectories": true,
              "outputs": [
                "test_results.json"
              ],
              "dependencies": [
                "psycopg2-binary",
                "pgvector",
                "numpy",
                "requests"
              ]
            },
            "label": "Test Operations",
            "ui_data": {
              "label": "Test Operations",
              "image": "/static/elyra/python.svg",
              "x_pos": 450,
              "y_pos": 150,
              "description": "Test RAG system"
            }
          },
          "inputs": [
            {
              "id": "inPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Input Port"
                }
              },
              "links": [
                {
                  "id": "link2",
                  "node_id_ref": "ingest-node",
                  "port_id_ref": "outPort"
                }
              ]
            }
          ],
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "Output Port"
                }
              }
            }
          ]
        }
      ],
      "app_data": {
        "ui_data": {
          "comments": [
            {
              "id": "comment1",
              "x_pos": 50,
              "y_pos": 50,
              "width": 500,
              "height": 80,
              "content": "Complete PGVector RAG Pipeline: Setup → Ingest → Test\nThis pipeline runs all three stages sequentially.",
              "associated_id_refs": []
            }
          ]
        },
        "version": 8,
        "runtime_config": "pgvector-runtime",
        "properties": {
          "name": "Complete PGVector RAG Pipeline",
          "runtime": "Generic"
        }
      },
      "runtime_ref": ""
    }
  ],
  "schemas": []
}
